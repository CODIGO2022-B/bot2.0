const API_KEYS = {
    gemini_studio: 'AIzaSyCWtmIRByCVhWDx4i0Q3QbaOFmz_1cpcLc',
    kimi: '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',
    mistral: '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',
    geo: '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',
    deepseek: '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',
    llama: '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',
};

const OPENROUTER_MODELS = {
    kimi: 'moonshotai/kimi-dev-72b:free',
    mistral: 'mistralai/mistral-7b-instruct:free',
    geo: 'google/gemini-pro-1.5',
    deepseek: 'deepseek/deepseek-chat',
    llama: 'meta-llama/llama-3.2-11b-vision-instruct:free',
};

const VARIABLE_DESCRIPTIONS = {
    P: 'Capital inicial o Presente',
    S: 'Monto final o Futuro',
    I: 'Interés total generado',
    j: 'Tasa de interés nominal (anual, a menos que se especifique lo contrario)',
    i: 'Tasa de interés efectiva por período',
    n: 'Número de períodos (años, meses, días)',
    t: 'Tiempo en años',
    m: 'Frecuencia de capitalización por año (ej: 12 para mensual)',
    k: 'Número de períodos de diferimiento',
    R: 'Monto de la renta o cuota periódica',
    G: 'Gradiente aritmético',
    g: 'Gradiente geométrico (tasa de crecimiento)',
    d: 'Tasa de descuento simple o bancaria',
    de: 'Tasa de descuento efectiva',
    DB: 'Monto del descuento bancario',
    pi: 'Tasa de inflación',
    N: 'Número de la cuota específica a analizar en un préstamo',
    A1: 'Monto de la primera amortización en un préstamo',
    DE_N: 'Derecho de extinguir una deuda después del pago N',
};

const FORMULA_LATEX_TEMPLATES = {
    'formula_util_dias_entre_fechas': 'n_{dias} = \text{DiasEntre}(fecha_{final}, fecha_{inicial})',
    'formula_util_fraccion_anio': 'n = \frac{n_{dias}}{360}',
    'formula_is_I_from_Pjn': 'I = P \cdot j \cdot n',
    'formula_is_S_from_Pjn': 'S = P(1 + j \cdot n)',
    'formula_is_P_from_Sjn': 'P = \frac{S}{1 + j \cdot n}',
    'formula_is_P_from_Ijn': 'P = \frac{I}{j \cdot n}',
    'formula_is_n_from_SPI': 'n = \frac{\frac{S}{P} - 1}{j}',
    'formula_is_n_from_IPj': 'n = \frac{I}{P \cdot j}',
    'formula_is_j_from_SPn': 'j = \frac{\frac{S}{P} - 1}{n}',
    'formula_is_j_from_IPn': 'j = \frac{I}{P \cdot n}',
    'formula_ic_S_from_Pin': 'S = P(1 + i)^{n}',
    'formula_ic_P_from_Sin': 'P = S(1 + i)^{-n}',
    'formula_ic_I_from_Pin': 'I = P[(1 + i)^{n} - 1]',
    'formula_ic_P_from_Iin': 'P = \frac{I}{(1 + i)^{n} - 1}',
    'formula_ic_n_from_SPi': 'n = \frac{\log(\frac{S}{P})}{\log(1 + i)}',
    'formula_ic_i_from_SPn': 'i = \left(\frac{S}{P}\right)^{\frac{1}{n}} - 1',
    'formula_ic_S_from_Pjm': 'S = P\left(1 + \frac{j}{m}\right)^{n}',
    'formula_ic_P_from_Sjm': 'P = S\left(1 + \frac{j}{m}\right)^{-n}',
    'formula_tasa_proporcional': 'i_{prop} = j \cdot \frac{n_{dias\_deseado}}{n_{dias\_conocido}}',
    'formula_tasa_efectiva_from_nominal': 'i = \left(1 + \frac{j}{m}\right)^{m \cdot t} - 1',
    'formula_tasa_equivalente': 'i_{eq} = (1 + i_{conocida})^{\frac{n_{dias\_deseado}}{n_{dias\_conocido}}} - 1',
    'formula_tasa_real': 'r = \frac{i - pi}{1 + pi}',
    'formula_dr_D_from_Sin': 'D = S\left[1 - (1 + i)^{-n}\right]',
    'formula_dr_P_from_Sin': 'P = S(1 + i)^{-n}',
    'formula_dbs_DB_from_Sdn': 'D_{B} = S \cdot d \cdot n',
    'formula_dbs_P_from_Sdn': 'P = S(1 - d \cdot n)',
    'formula_db_DB_from_Sden': 'D_{B} = S\left[1 - (1 - de)^{n}\right]',
    'formula_db_P_from_Sden': 'P = S(1 - de)^{n}',
    'formula_db_S_from_DBden': 'S = \frac{D_{B}}{1 - (1 - de)^{n}}',
    'formula_db_de_from_DBSn': 'd_{e} = 1 - \left(1 - \frac{D_{B}}{S}\right)^{\frac{1}{n}}',
    'formula_db_de_from_Psn': 'd_{e} = 1 - \left(\frac{P}{S}\right)^{\frac{1}{n}}',
    'formula_av_S_from_Rin': 'S_{v} = R \left[ \frac{(1 + i)^{n} - 1}{i} \right]',
    'formula_av_P_from_Rin': 'P_{v} = R \left[ \frac{1 - (1 + i)^{-n}}{i} \right]',
    'formula_av_R_from_Sin': 'R = S_{v} \left[ \frac{i}{(1 + i)^{n} - 1} \right]',
    'formula_av_R_from_Pin': 'R = P_{v} \left[ \frac{i}{1 - (1 + i)^{-n}} \right]',
    'formula_av_n_from_SRi': 'n = \frac{\log(\frac{S \cdot i}{R} + 1)}{\log(1 + i)}',
    'formula_av_n_from_PRi': 'n = -\frac{\log(1 - \frac{P \cdot i}{R})}{\log(1 + i)}',
    'formula_aa_S_from_Rin': 'S_{a} = R \left[ \frac{(1 + i)^{n} - 1}{i} \right] (1+i)',
    'formula_aa_P_from_Rin': 'P_{a} = R \left[ \frac{1 - (1 + i)^{-n}}{i} \right] (1+i)',
    'formula_aa_R_from_Sin': 'R = \frac{S_{a}}{1+i} \left[ \frac{i}{(1 + i)^{n} - 1} \right]',
    'formula_aa_R_from_Pin': 'R = \frac{P_{a}}{1+i} \left[ \frac{i}{1 - (1 + i)^{-n}} \right]',
    'formula_aa_n_from_PRi': 'n = -\frac{\log(1 - \frac{P \cdot i}{R(1+i)})}{\log(1 + i)}',
    'formula_aa_n_from_SRi': 'n = \frac{\log(\frac{S \cdot i}{R(1+i)} + 1)}{\log(1 + i)}',
    'formula_adv_P_from_Rink': 'P_{adv} = R \left[ \frac{1 - (1 + i)^{-n}}{i} \right] (1+i)^{-k}',
    'formula_ada_P_from_Rink': 'P_{ada} = R \left[ \frac{1 - (1 + i)^{-n}}{i} \right] (1+i) (1+i)^{-k}',
    'formula_ada_n_from_PRik': 'n = -\frac{\log(1 - \frac{P \cdot i}{R (1+i)^{1-k}})}{\log(1+i)}',
    'formula_ada_k_from_PRin': 'k = \frac{\log(\frac{R(1-(1+i)^{-n})(1+i)}{P \cdot i})}{\log(1+i)}',
    'formula_ga_P_from_Gin': 'P = \frac{G}{i} \left[ \frac{1 - (1+i)^{-n}}{i} - n(1+i)^{-n} \right]',
    'formula_ga_S_from_Gin': 'S = \frac{G}{i} \left[ \frac{(1+i)^{n} - 1}{i} - n \right]',
    'formula_gg_P_from_Rgin': 'P = R \left[ \frac{1 - (\frac{1+g}{1+i})^{n}}{i-g} \right]',
    'formula_gg_S_from_Rgin': 'S = R \left[ \frac{(1+i)^{n} - (1+g)^{n}}{i-g} \right]',
    'formula_prestamo_saldo_N': 'Saldo_{N} = P \left[ \frac{(1+i)^{n} - (1+i)^{N}}{(1+i)^{n} - 1} \right]',
    'formula_prestamo_amortizacion_N': 'Amortizacion_{N} = \frac{P \cdot i}{1-(1+i)^{-n}} (1+i)^{N-1-n}',
    'formula_prestamo_interes_N': 'Interes_{N} = \frac{P \cdot i}{1-(1+i)^{-n}} (1 - (1+i)^{N-1-n})',
    'formula_prestamo_A1_from_Pin': 'A_1 = \frac{P \cdot i}{1-(1+i)^{-n}} (1+i)^{-n}',
    'formula_prestamo_de_from_RinN': 'DE_N = R (1+i)^{-n} \left[ \frac{(1+i)^{N}-1}{i} \right]',
    'formula_prestamo_de_from_PinN': 'DE_N = P \left[ \frac{(1+i)^{N}-1}{(1+i)^{n}-1} \right]',
    'formula_prestamo_de_from_A1iN': 'DE_N = A_1 \left[ \frac{(1+i)^{N}-1}{i} \right]',
    'formula_ic_n_from_IPi': 'n = \frac{\log(\frac{I}{P} + 1)}{\log(1 + i)}',
    'formula_ic_i_from_IPn': 'i = \left(\frac{I}{P} + 1\right)^{\frac{1}{n}} - 1',
    'formula_ic_j_from_SPnm': 'j = m \left[ \left(\frac{S}{P}\right)^{\frac{1}{n}} - 1 \right]',
    'formula_drs_D_from_Sjn': 'D = \frac{S \cdot j \cdot n}{1 + j \cdot n}',
    'formula_dbs_S_from_DBdn': 'S = \frac{D_{B}}{d \cdot n}',
    'formula_dbs_d_from_DBSn': 'd = \frac{D_{B}}{S \cdot n}',
    'formula_dbs_n_from_DBSd': 'n = \frac{D_{B}}{S \cdot d}',
    'formula_db_n_from_DBSde': 'n = \frac{\log(1 - \frac{D_{B}}{S})}{\log(1 - de)}',
    'formula_adv_n_from_PRik': 'n = -\frac{\log(1 - \frac{P(1+i)^{k} i}{R})}{\log(1 + i)}',
    'formula_adv_k_from_PRin': 'k = \frac{\log(\frac{R(1-(1+i)^{-n})}{P i})}{\log(1+i)}',
    'formula_ga_R_from_Gin': 'R_{eq} = G \left[ \frac{1}{i} - \frac{n}{(1+i)^{n} - 1} \right]',
    'formula_util_suma': 'Resultado = valor1 + valor2',
    'formula_util_resta': 'Resultado = valor1 - valor2',
    'formula_util_multiplicacion': 'Resultado = valor1 \cdot valor2',
    'formula_util_division': 'Resultado = \frac{valor1}{valor2}',
};

module.exports = { API_KEYS, OPENROUTER_MODELS, FORMULA_LATEX_TEMPLATES, VARIABLE_DESCRIPTIONS };
